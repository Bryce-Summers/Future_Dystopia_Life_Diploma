// Generated by CoffeeScript 1.11.1

/*
 * Story Controller for Future Dystopia Project.
 *
 * Written by Bryce Summers on Apr.24.2017
 * 
 * This class handles the button and Story text update logic throughout the game.
 * Note: Dimensions of room are 1200px by 800 px.
 */

(function() {
  FDP.Controller_Story = (function() {
    function Controller_Story(ui, draw) {
      this.ui = ui;
      this.draw = draw;
      this._active = true;
      this.p_left = this.newCircle(200, 700);
      this.p_mid = this.newCircle(600, 700);
      this.p_right = this.newCircle(1000, 700);
      this.p_up = this.newCircle(600, 200);
      this.p_down = this.newCircle(600, 600);
      this.current_narrative_audio = null;
      this.buttons = [];
      this.advance_func = this.click(this);
      this.time_left = null;
      this.total_time = 0.0;
      this.make_story();
      this.advance_func();
    }

    Controller_Story.prototype.click = function(self) {
      return function() {
        var alpha, b, img, j, len, pline, ref, story, transition_speed;
        ref = self.buttons;
        for (j = 0, len = ref.length; j < len; j++) {
          b = ref[j];
          self.removeButton(b);
        }
        if (self.story_index >= self.story.length) {
          return;
        }
        story = self.story[self.story_index];
        self.story_index += 1;
        if (story.mid) {
          img = story.mid;
          pline = self.p_mid;
          b = self.ui.createButton(pline, self.advance_func, img);
          self.buttons.push(b);
        }
        if (story.left) {
          img = story.left;
          pline = self.p_left;
          b = self.ui.createButton(pline, self.advance_func, img);
          self.buttons.push(b);
        }
        if (story.right) {
          img = story.right;
          pline = self.p_right;
          b = self.ui.createButton(pline, self.advance_func, img);
          self.buttons.push(b);
        }
        if (story.up) {
          img = story.up;
          pline = self.p_up;
          b = self.ui.createButton(pline, self.advance_func, img);
          self.buttons.push(b);
        }
        if (story.down) {
          img = story.down;
          pline = self.p_down;
          b = self.ui.createButton(pline, self.advance_func, img);
          self.buttons.push(b);
        }
        if (story.header) {
          header.innerHTML = story.header;
        }
        if (story.statement) {
          instructions.innerHTML = story.statement;
        }
        if (story.audio) {
          if (self.current_narrative_audio !== null) {
            self.current_narrative_audio.pause();
          }
          if (story.audio !== null) {
            play(story.audio);
            self.current_narrative_audio = story.audio;
          }
        }
        if (story.background) {
          self.draw.backgroundImage(story.background);
        }
        if (story.center_text) {
          alpha = 1.0;
          if (story.center_target_alpha) {
            alpha = story.center_target_alpha;
          }
          transition_speed = .01;
          if (story.transition_speed) {
            transition_speed = story.transition_speed;
          }
          self.draw.backgroundMono(new FDP.Color(0.0, 0, 0), alpha, transition_speed);
          self.draw.centerMessage(story.center_text, new FDP.Color(1, 1, 1));
        } else if (story.center_target_alpha !== void 0) {
          self.draw.backgroundMono(new FDP.Color(0, 0, 0), story.center_target_alpha);
        }
        if (story.time) {
          self.time_left = story.time;
        }
        if (story.time_end) {
          return self.time_left = story.time_end - self.total_time;
        }
      };
    };

    Controller_Story.prototype.make_story = function() {
      this.story = [];
      this.story_index = 0;

      /*
      s_birth = {mid:img_cry, header:"Birth", statement: "You were born into this world."}
      @story.push(s_birth)
      s_birth = {left:img_cry, header:"Birth", statement: "You were born into this world."}
      @story.push(s_birth)
      s_birth = {up:img_cry, header:"Birth", statement: "You were born into this world."}
      @story.push(s_birth)
      s_birth = {down:img_cry, header:"Birth", statement: "You were born into this world."}
      @story.push(s_birth)
       */
      this.story.push({
        audio: sounds.intro,
        background: bg_birth,
        center_text: "2203 A.D.",
        center_target_alpha: 1.0,
        time_end: 7390.330000000002,
        transition_speed: .01
      });
      this.story.push({
        header: "",
        statement: "",
        center_text: "Mult",
        time_end: 8506.860000000002,
        transition_speed: .1
      });
      this.story.push({
        header: "",
        statement: "",
        center_text: "Mult",
        time_end: 9035.420000000002 - 200,
        transition_speed: .1
      });
      this.story.push({
        header: "",
        statement: "",
        center_text: "Mult. I.",
        time_end: 9617.365000000002 - 200,
        transition_speed: .1
      });
      this.story.push({
        header: "",
        statement: "",
        center_text: "Mult. I. Plier",
        time_end: 10000.365000000002,
        transition_speed: .1
      });
      this.story.push({
        header: "",
        statement: "",
        background: ill_evolution,
        center_text: "",
        center_target_alpha: 0.0,
        time_end: 29054.570000000003,
        transition_speed: .1
      });
      this.story.push({
        header: "",
        statement: "",
        background: ill_evolution,
        center_text: "Objectivity",
        center_target_alpha: 0.0,
        time_end: 32487.760000000006,
        transition_speed: .1
      });
      this.story.push({
        header: "",
        statement: "",
        background: ill_evolution,
        center_text: "Productivity",
        center_target_alpha: 0.0,
        time_end: 34896.325,
        transition_speed: .1
      });
      this.story.push({
        header: "",
        statement: "",
        center_text: "Days of Government Approved Work.",
        center_target_alpha: 1.0,
        time_end: 39396.270000000004 - 200,
        transition_speed: .1
      });
      this.story.push({
        header: "",
        statement: "",
        background: null,
        center_text: "x (Physical + Mental Difficulty)",
        center_target_alpha: 1.0,
        time_end: 42812.22,
        transition_speed: .01
      });
      this.story.push({
        header: "",
        statement: "",
        background: null,
        center_text: "- Education Days",
        center_target_alpha: 1.0,
        time_end: 47694.810000000005,
        transition_speed: .1
      });
      this.story.push({
        header: "",
        statement: "",
        background: ill_external_standards,
        center_text: "",
        center_target_alpha: 0.0,
        time_end: 62494.02500000001,
        transition_speed: .2
      });
      this.story.push({
        header: "",
        statement: "",
        background: ill_external_standards,
        center_text: "",
        center_target_alpha: 1.0,
        time: 400,
        transition_speed: .2
      });
      this.story.push({
        header: "",
        statement: "",
        background: ill_life_diploma,
        center_text: "",
        center_target_alpha: 0.0,
        time_end: 78236,
        transition_speed: .1
      });
      this.story.push({
        header: "",
        statement: "",
        background: ill_life_diploma,
        center_text: "Art making",
        center_target_alpha: 1.0,
        time_end: 78985,
        transition_speed: .1
      });
      this.story.push({
        header: "",
        statement: "",
        background: null,
        center_text: "Philosophy",
        center_target_alpha: 1.0,
        time_end: 79803,
        transition_speed: .1
      });
      this.story.push({
        header: "",
        statement: "",
        background: null,
        center_text: "Etc",
        center_target_alpha: 1.0,
        time_end: 82046.55500000001,
        transition_speed: .1
      });
      this.story.push({
        header: "",
        statement: "",
        background: null,
        center_text: "Non-productive Education Days.",
        center_target_alpha: 1.0,
        time_end: 90829.30500000001,
        transition_speed: .1
      });
      this.story.push({
        header: "",
        statement: "",
        background: null,
        center_text: "Real Work Days.",
        center_target_alpha: 1.0,
        time_end: 100134,
        transition_speed: .1
      });
      this.story.push({
        header: "",
        statement: "",
        background: null,
        center_text: "2220 A.D.",
        center_target_alpha: 1.0,
        time: 3000,
        transition_speed: .1
      });
      this.story.push({
        header: "",
        statement: "",
        background: null,
        audio: sounds.mother_died,
        center_text: "Mom died when I was 17.",
        center_target_alpha: 1.0,
        time: 3000,
        transition_speed: .01
      });

      /*
      ill_evolution
      ill_life_diploma
      ill_mothers_funeral
      ill_external_standards
       */
      this.story.push({
        left: img_cry,
        mid: img_cry,
        right: img_cry,
        center_target_alpha: 0.0,
        header: "Mother's Death",
        statement: "My Mom died and was buried in a Government Beureu or external standards graveyard.",
        background: ill_mothers_funeral
      });
      this.story.push({
        left: img_todo,
        mid: img_todo,
        right: img_todo,
        header: "Artist Graveyard",
        statement: "On my way out I passed by the artist graveyard...",
        audio: sounds.musings_from_the_cradle,
        background: bg_cemetary_artists
      });
      this.story.push({
        left: img_todo,
        mid: img_todo,
        right: img_todo,
        header: "High School",
        statement: "I enrolled in a STEM centered High School.",
        audio: sounds.stem_school,
        background: bg_highschool
      });
      this.story.push({
        left: img_todo,
        mid: img_todo,
        right: img_todo,
        header: "railroad",
        statement: "I had a fantasy about working for the railroad. It would have increased my physical difficulty multiplier.",
        audio: sounds.sixteen_tons,
        background: bg_railroad
      });
      this.story.push({
        left: img_todo,
        mid: img_todo,
        right: img_todo,
        header: "college",
        statement: "I took the sensible route and enrolled in college to increase my mental difficulty multiplier.",
        audio: sounds.the_path_of_logic_and_math,
        background: bg_railroad
      });
      this.story.push({
        left: img_todo,
        mid: img_todo,
        right: img_todo,
        header: "Professional IT worker",
        statement: "After graduating college, I became an IT worker at an ethical defense contracter located in Manhattan.",
        audio: sounds.number_crunching,
        background: bg_professional
      });
      this.story.push({
        left: img_todo,
        mid: img_todo,
        right: img_todo,
        header: "A plead for the homeless.",
        statement: "After graduating college, I became an IT worker at an ethical defense contracter.",
        audio: sounds.plead_for_the_homeless,
        background: bg_homeless
      });
      this.story.push({
        left: img_todo,
        mid: img_todo,
        right: img_todo,
        header: "Dream from Mom",
        statement: "A dream from my mother told me to remember the dreams that I had.",
        audio: sounds.stay_close_to_your_dreams,
        background: bg_dreams
      });
      this.story.push({
        left: img_todo,
        mid: img_todo,
        right: img_todo,
        header: "Older Years",
        statement: "From then on, I became an artist and tried to make a unique contribution to the world. I reflected on my life.",
        audio: sounds.thank_the_lord,
        background: bg_old_age
      });
      return this.story.push({
        left: img_todo,
        mid: img_todo,
        right: img_todo,
        header: "My Funeral",
        statement: "I died and was buried in the artist cemetary. A disgrace on the outside, but a fullfilled human being on the inside.",
        audio: sounds.mother_died_reprise,
        background: bg_old_age
      });
    };

    Controller_Story.prototype.newCircle = function(x, y) {
      var cx, cy, i, j, pts, radius, ref, ref1;
      pts = [];
      for (i = j = 0, ref = Math.PI * 2, ref1 = Math.PI / 100; ref1 > 0 ? j < ref : j > ref; i = j += ref1) {
        cx = x;
        cy = y;
        radius = 48;
        pts.push(new BDS.Point(cx + radius * Math.cos(i), cy + radius * Math.sin(i)));
      }
      return new BDS.Polyline(true, pts, true);
    };

    Controller_Story.prototype.removeButton = function(b) {
      return this.ui.removeButton(b);
    };

    Controller_Story.prototype.setActive = function(isActive) {
      return this._active = isActive;
    };

    Controller_Story.prototype.isActive = function() {
      return this._active;
    };

    Controller_Story.prototype.mouse_down = function(event) {
      return console.log(this.total_time);
    };

    Controller_Story.prototype.mouse_up = function(event) {};

    Controller_Story.prototype.mouse_move = function(event) {};

    Controller_Story.prototype.time = function(dt) {
      this.total_time += dt;
      if (this.time_left !== null) {
        this.time_left -= dt;
        if (this.time_left < 0) {
          this.time_left = null;
          return this.advance_func();
        }
      }
    };

    Controller_Story.prototype.window_resize = function(event) {};

    return Controller_Story;

  })();

}).call(this);

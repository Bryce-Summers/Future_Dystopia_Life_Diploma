// Generated by CoffeeScript 1.11.1

/*
 * Story Controller for Future Dystopia Project.
 *
 * Written by Bryce Summers on Apr.24.2017
 * 
 * This class handles the button and Story text update logic throughout the game.
 * Note: Dimensions of room are 1200px by 800 px.
 */

(function() {
  FDP.Controller_Story = (function() {
    function Controller_Story(ui) {
      this.ui = ui;
      this._active = true;
      this.p_left = this.newCircle(200, 400);
      this.p_right = this.newCircle(1000, 400);
      this.p_up = this.newCircle(600, 200);
      this.p_down = this.newCircle(600, 600);
      this.p_mid = this.newCircle(600, 400);
      this.buttons = [];
      this.advance_func = this.click(this);
      this.make_story();
      this.advance_func();
    }

    Controller_Story.prototype.click = function(self) {
      return function() {
        var b, img, j, len, pline, ref, story;
        play(sounds.button);
        ref = self.buttons;
        for (j = 0, len = ref.length; j < len; j++) {
          b = ref[j];
          self.removeButton(b);
        }
        if (self.story_index >= self.story.length) {
          return;
        }
        story = self.story[self.story_index];
        self.story_index += 1;
        if (story.mid) {
          img = story.mid;
          pline = self.p_mid;
          b = self.ui.createButton(pline, self.advance_func, img);
          self.buttons.push(b);
        }
        if (story.left) {
          img = story.left;
          pline = self.p_left;
          b = self.ui.createButton(pline, self.advance_func, img);
          self.buttons.push(b);
        }
        if (story.right) {
          img = story.right;
          pline = self.p_right;
          b = self.ui.createButton(pline, self.advance_func, img);
          self.buttons.push(b);
        }
        if (story.up) {
          img = story.up;
          pline = self.p_up;
          b = self.ui.createButton(pline, self.advance_func, img);
          self.buttons.push(b);
        }
        if (story.down) {
          img = story.down;
          pline = self.p_down;
          b = self.ui.createButton(pline, self.advance_func, img);
          self.buttons.push(b);
        }
        if (story.header) {
          header.innerHTML = story.header;
        }
        if (story.statement) {
          return instructions.innerHTML = story.statement;
        }
      };
    };

    Controller_Story.prototype.make_story = function() {
      var s_birth;
      this.story = [];
      this.story_index = 0;
      s_birth = {
        mid: img_cry,
        header: "Birth",
        statement: "You were born into this world."
      };
      this.story.push(s_birth);
      s_birth = {
        left: img_cry,
        header: "Birth",
        statement: "You were born into this world."
      };
      this.story.push(s_birth);
      s_birth = {
        up: img_cry,
        header: "Birth",
        statement: "You were born into this world."
      };
      this.story.push(s_birth);
      s_birth = {
        down: img_cry,
        header: "Birth",
        statement: "You were born into this world."
      };
      this.story.push(s_birth);
      s_birth = {
        right: img_cry,
        header: "Birth",
        statement: "You were born into this world."
      };
      this.story.push(s_birth);
      this.story.push({
        mid: img_study,
        up: img_play,
        down: img_dream,
        header: "",
        statement: ""
      });
      this.story.push({
        up: img_college,
        mid: img_work,
        header: "",
        statement: ""
      });
      this.story.push({
        up: img_think,
        mid: img_follow,
        down: img_work,
        header: "",
        statement: ""
      });
      this.story.push({
        up: img_scientist,
        mid: img_artist,
        down: img_inventor,
        header: "",
        statement: ""
      });
      return this.story.push({
        up: img_think,
        mid: img_learn,
        down: img_worry,
        header: "",
        statement: ""
      });

      /*
      @story.push({mid:img_age
                  ,header:""
                  ,statement: ""})
       */
    };

    Controller_Story.prototype.newCircle = function(x, y) {
      var cx, cy, i, j, pts, radius, ref, ref1;
      pts = [];
      for (i = j = 0, ref = Math.PI * 2, ref1 = Math.PI / 100; ref1 > 0 ? j < ref : j > ref; i = j += ref1) {
        cx = x;
        cy = y;
        radius = 48;
        pts.push(new BDS.Point(cx + radius * Math.cos(i), cy + radius * Math.sin(i)));
      }
      return new BDS.Polyline(true, pts, true);
    };

    Controller_Story.prototype.removeButton = function(b) {
      return this.ui.removeButton(b);
    };

    Controller_Story.prototype.setActive = function(isActive) {
      return this._active = isActive;
    };

    Controller_Story.prototype.isActive = function() {
      return this._active;
    };

    Controller_Story.prototype.mouse_down = function(event) {};

    Controller_Story.prototype.mouse_up = function(event) {};

    Controller_Story.prototype.mouse_move = function(event) {};

    Controller_Story.prototype.time = function(dt) {};

    Controller_Story.prototype.window_resize = function(event) {};

    return Controller_Story;

  })();

}).call(this);
